# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_zero_shot_linkedin_test.ipynb.

# %% auto 0
__all__ = ['classifier', 'sequence', 'candidate_labels', 'path', 'df', 'analyze_one']

# %% ../nbs/01_zero_shot_linkedin_test.ipynb 5
classifier = pipeline("zero-shot-classification")

# %% ../nbs/01_zero_shot_linkedin_test.ipynb 6
sequence = "Who are you voting for in 2022?"
candidate_labels = ["politics", "public health", "economics"]

print(classifier(sequence, candidate_labels))

# %% ../nbs/01_zero_shot_linkedin_test.ipynb 7
path = Path('..')
df = pd.read_csv(path/'linkedin.csv')

# %% ../nbs/01_zero_shot_linkedin_test.ipynb 11
df.fillna('',inplace=True)

# %% ../nbs/01_zero_shot_linkedin_test.ipynb 12
df['input'] = 'description: ' + df.description+'; Experience: '+df.Experience+ '; Name: '+ df.Name+'; position: '+df.position+'; location: '+df.location+ '; skills: '+df.skills+ '; clean_skills: '+df.clean_skills

# %% ../nbs/01_zero_shot_linkedin_test.ipynb 14
df.input = df.input.astype(str)
df.input = df.input.str.replace('\\n',' ',regex=False)

# %% ../nbs/01_zero_shot_linkedin_test.ipynb 16
candidate_labels = ['US','India','UK', "executive",'analyst','auditor','junior','senior','developer','programmer','asia','south america']
candidate_labels = df.category.unique().tolist()
candidate_labels.extend(['US','India'])

# %% ../nbs/01_zero_shot_linkedin_test.ipynb 17
def analyze_one(df, candidate_labels, index ):
    i=index
    sequence = df.input[i]
    answer = classifier(sequence, candidate_labels)
    dfo = pd.DataFrame(answer)
    dfo.sort_values('scores',inplace=True)
    fig = px.bar(dfo, x="scores", y="labels", orientation='h')
    print(dfo.sequence[0])
    
    print('Actual Category: '+str(df.category[i]))
    fig.show()
